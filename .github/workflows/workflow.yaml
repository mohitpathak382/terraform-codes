name: 'IaC Workflow | Terraform'

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - closed
      - synchronize

permissions:
  contents: read
  id-token: write

env:
  WIF_PROVIDER: 'projects/288657159168/locations/global/workloadIdentityPools/githubactionspool/providers/test-github-actions'
  SA: 'xyz-345@quantiphi-test-470710.iam.gserviceaccount.com'
  ACCESS_TOKEN_LIFETIME: 900s
  GCP_PROJECT: 'quantiphi-test-470710'

jobs:
  terraform_plan:
    name: 'Terraform | Plan'
    runs-on: ubuntu-latest

    outputs:
      changed_files: ${{ steps.changed-dirs-files.outputs.FOLDER_LIST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.SA }}
          access_token_lifetime: ${{ env.ACCESS_TOKEN_LIFETIME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.7'

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files_ignore: |
            .github/**
            modules/**
          files: |
            **.tf
            **.tfvars

      - name: Get list of changed top-level directories
        id: changed-dirs-files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "${ALL_CHANGED_FILES}" | tr ' ' '\n' | sed 's|\(.*\)/.*|\1|' | sort -u > changed-dirs.txt
          FOLDER=$(cat changed-dirs.txt | sort -u | tr '\n' ' ')
          echo "FOLDER_LIST=$FOLDER" >> $GITHUB_OUTPUT

      - name: Build dynamic_secrets.tfvars
        id: generate-tfvars
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          if [ ! -f "secret-manager-config.json" ]; then
            echo "secret-manager-config.json not found!"
            exit 1
          fi

          echo "dynamic_secrets = {" > dynamic_secrets.tfvars
          for secret_name in $(jq -r 'to_entries[] | .value[]' secret-manager-config.json | sort -u); do
            value=$(eval echo \$$secret_name)
            echo "  \"$secret_name\" = \"$value\"" >> dynamic_secrets.tfvars
          done
          echo "}" >> dynamic_secrets.tfvars

      - name: Terraform Init & Plan
        run: |
          FOLDER_LIST=$(echo "${{ steps.changed-dirs-files.outputs.FOLDER_LIST }}" | tr ' ' '\n')
          for folder in $FOLDER_LIST; do
            echo "Processing folder: $folder"
            cd $folder
            terraform fmt -recursive .
            terraform init
            terraform plan -var-file="../dynamic_secrets.tfvars" -out=tfplan
            cd -
          done

  terraform_apply:
    name: 'Terraform | Apply'
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    if: ${{ github.event.pull_request.merged == true }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.SA }}
          access_token_lifetime: ${{ env.ACCESS_TOKEN_LIFETIME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.7'

      - name: Build dynamic_secrets.tfvars
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          if [ ! -f "secret-manager-config.json" ]; then
            echo "secret-manager-config.json not found!"
            exit 1
          fi

          echo "dynamic_secrets = {" > dynamic_secrets.tfvars
          for secret_name in $(jq -r 'to_entries[] | .value[]' secret-manager-config.json | sort -u); do
            value=$(eval echo \$$secret_name)
            echo "  \"$secret_name\" = \"$value\"" >> dynamic_secrets.tfvars
          done
          echo "}" >> dynamic_secrets.tfvars

      - name: Terraform Apply
        run: |
          echo "Starting Terraform Apply"

          # Get changed folders from the previous job
          FOLDER_LIST=$(echo "${{ needs.terraform_plan.outputs.changed_files }}" | tr ' ' '\n')

          for folder in $FOLDER_LIST; do
            echo "Applying changes in folder: $folder"
            cd $folder
            terraform init
            terraform apply -var-file="../dynamic_secrets.tfvars" -auto-approve
            cd -
          done

